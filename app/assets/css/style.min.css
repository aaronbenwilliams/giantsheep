/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2018. MIT licensed.
 */
@import url("https://fonts.googleapis.com/css?family=Montserrat:400,700");.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%;background:radial-gradient(ellipse at center,#f7f6f0 0,#c2ba8c 80%,#b0a66b 100%)}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh;overflow:hidden}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.logo{margin:-58px 0 0 -100px;position:absolute;top:50%;left:50%}.toggle-button{position:fixed;width:44px;height:40px;top:35px;right:35px;transition:.25s;z-index:2}.toggle-button:hover{cursor:pointer}.toggle-button .menu-bar{position:absolute;border-radius:2px;width:80%;transition:.5s}.toggle-button .menu-bar-top{border:4px solid #f9dc5c;border-bottom:none;top:0}.toggle-button .menu-bar-middle{height:4px;background-color:#f9dc5c;margin-top:7px;margin-bottom:7px;top:4px}.toggle-button .menu-bar-bottom{border:4px solid #f9dc5c;border-top:none;top:22px}.button-open-transition,.button-open .menu-bar-bottom,.button-open .menu-bar-top{border-color:#f9dc5c;transition:.5s}.button-open .menu-bar-top{transform:rotate(45deg) translate(8px,8px)}.button-open .menu-bar-middle{background-color:#f9dc5c;transform:translate(250px);transition:.1s ease-in;opacity:0}.button-open .menu-bar-bottom{transform:rotate(-45deg) translate(7px,-7px)}.menu-wrap{background-color:#465362;position:absolute;top:0;right:-350px;height:100vh;width:350px;overflow:hidden;z-index:1;transition:.25s}.menu-wrap .social{bottom:15px}.menu-wrap .social,.menu-wrap span{position:absolute;text-align:center;width:100%}.menu-wrap span{color:#011936;font-size:12px;bottom:5px}.menu-show{right:0}.menu{list-style:none;text-align:center;padding-left:0;padding-top:60px}.menu li{display:block;padding-bottom:20px}.menu li a{text-decoration:none;font-size:22px;text-transform:uppercase;font-weight:700;color:#f9dc5c;transition:.3s}.menu li a:hover{opacity:.5}@media only screen and (max-width:45em){.btn-bkg,.menu,.menu-wrap,.toggle-button{display:none}}#about,#contact,#intro,#latest{background-size:cover}#intro{background-image:url(../img/bg1.jpg)}#intro p{color:rgba(70,83,98,.5);margin-top:0}#about{background-image:url(../img/bg2.jpg);padding:6% 0 0}#about p{color:#f9dc5c}#latest{background-image:url(../img/bg3.jpg);padding:6% 0 0}#latest p,#latest p a{color:#465362}#latest p a{text-decoration:none;font-weight:700;transition:.3s}#latest p a:hover{opacity:.5}#latest .btn-bkg{display:block;height:40px;width:45px;background-color:#465362;border-radius:7px;position:absolute;right:39px;top:28px}#contact{background-image:url(../img/bg4.jpg);padding:6% 0 0;color:#f9dc5c}@media only screen and (max-width:33.75em){.img-responsive{display:block;width:80%}}.container{width:50%;padding-left:40px}@media only screen and (min-width:33.75em){.container{width:80%}}@media only screen and (min-width:60em){.container{width:75%;max-width:60rem}}@media only screen and (max-width:33.75em){.container{width:80%}}.row{position:relative;width:100%}.row [class^=col]{float:left;margin:.5rem 2%;min-height:.125rem}.row:after{content:"";display:table;clear:both}.col-1,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-10,.col-11,.col-12{width:96%}.col-1-sm{width:4.33333%}.col-2-sm{width:12.66667%}.col-3-sm{width:21%}.col-4-sm{width:29.33333%}.col-5-sm{width:37.66667%}.col-6-sm{width:46%}.col-7-sm{width:54.33333%}.col-8-sm{width:62.66667%}.col-9-sm{width:71%}.col-10-sm{width:79.33333%}.col-11-sm{width:87.66667%}.col-12-sm{width:96%}@media only screen and (min-width:45em){.col-1{width:4.33333%}.col-2{width:12.66667%}.col-3{width:21%}.col-4{width:29.33333%}.col-5{width:37.66667%}.col-6{width:46%}.col-7{width:54.33333%}.col-8{width:62.66667%}.col-9{width:71%}.col-10{width:79.33333%}.col-11{width:87.66667%}.col-12{width:96%}.hidden-sm{display:block}}form input,form textarea{background:none;border:2px solid #f9dc5c;border-radius:5px;color:#f9dc5c;font-size:16px;padding:10px 15px;display:block;width:80%;margin-bottom:10px}form input::-webkit-input-placeholder,form textarea::-webkit-input-placeholder{opacity:1}form input:-ms-input-placeholder,form textarea:-ms-input-placeholder{opacity:1}form input::placeholder,form textarea::placeholder{opacity:1}form input[type=submit]{font-weight:700;color:#465362;background:#f9dc5c;transition:.3s;cursor:pointer;text-transform:uppercase}form input[type=submit]:hover{opacity:.5}.headline,.lead-img{position:absolute;top:35px;left:40px}.social{list-style:none;padding:0;font-size:22px}.social li{display:inline-block;padding-right:15px}.social li:last-child{padding-right:0}.social li a{color:#f9dc5c;transition:.3s}.social li a:hover{opacity:.5}body{font-family:Montserrat,sans-serif}p{font-size:16px;font-weight:400}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvX3R5cG9ncmFwaHkuc2NzcyIsIm1vZHVsZXMvX2NsZWFyZml4LnNjc3MiLCJzdHlsZS5jc3MiLCJtb2R1bGVzL19kZWZhdWx0cy5zY3NzIiwibW9kdWxlcy9fbm9ybWFsaXplLnNjc3MiLCJwYXJ0aWFscy9faGVhZGVyLnNjc3MiLCJtaXhpbnMvX3Bvc2l0aW9uLnNjc3MiLCJwYXJ0aWFscy9fbmF2LnNjc3MiLCJtb2R1bGVzL19iYWNrZ3JvdW5kcy5zY3NzIiwibW9kdWxlcy9fZ3JpZC5zY3NzIiwibW9kdWxlcy9faW5wdXRzLnNjc3MiLCJtb2R1bGVzL19pbWFnZXMuc2NzcyIsIm1vZHVsZXMvX2xpc3RzLnNjc3MiLCJtb2R1bGVzL19taXNjLnNjc3MiLCJtb2R1bGVzL19wcmludC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsMEVBQVksQUNBWiwyQkFDRSxZQUFZLEFBQ1osYUFBYyxDQUNmLEFBQ0QsUUNFRSxNRERRLENBRFYsQUFTQyxhQUZHLFVBQVcsQ0FDWixBRVpILEVBQ0Usc0JBQXNCLEFBQ3RCLDJCQUEyQixBQUMzQixpQ0FBa0MsQ0FDbkMsQUFDRCxLQUNFLGdCQUFnQixBQUNoQixnRkFBZ0YsQ0FDakYsQUFDRCxLQUNFLGlEQUFxRCxBQUNyRCxXQUFXLEFBQ1gsOEJBQStCLENBQ2hDLEFBQ0QsVUFDQyxpQkFBaUIsQUFDakIsZUFBZ0IsQ0FDaEI7O0FDakJELDRFREtBLEFDTDRFLEtBUTFFLHVCQUF1QixBQUN2QiwwQkFBMEIsQUFDMUIsNkJBQThCLENERGhDLEFDRUMsS0FPQyxRQUFTLENBQ1YsQUFXRCxvRkFZRSxhQUFjLENBQ2YsQUFNRCw0QkFJRSxvQkFBcUIsQ0FDdEIsQUFNRCxzQkFDRSxhQUFhLEFBQ2IsUUFBUyxDQUNWLEFBTUQsU0FDRSx1QkFBd0IsQ0FDekIsQUFPRCxrQkFFRSxZQUFhLENBQ2QsQUFVRCxFQUNFLDZCQUE2QixBQUM3QixvQ0FBcUMsQ0FDdEMsQUFPRCxpQkFFRSxl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QUFTLEFBQ1QsU0FBVSxDQUNYLEFDVkQsUUFDRSxnQkFBZ0IsQUFDaEIsVUFBVSxBQUNWLGNBQWUsQ0FIakIsQUEwQkMsV0FwQkcscUJBQXFCLEFBQ3JCLGtCQUFtQixDQVB2QixBQXlCRyxzQkFmRyxlQUFnQixDQVZ0QixBQVdLLGFBR0MsY0FBYyxBQUtkLGNBQWMsQ0FuQnBCLEFBd0JLLG1CQUZHLFVBQVcsQ1RibkIsQVNjTyxLWnBCTCxpQ0FBcUMsQ0FDdEMsQUFFRCxFQUNFLGVBQWUsQUFDZixlQUFnQixDQUNqQixBYVRELFlBQ0UsZ0JBQWdCLEFBQ2hCLFdBQVcsQUFDWCxnQkFBaUIsQ0FDbEIsQUFDRCxpQkFDRSxnQkFBZ0IsQUFDaEIsV0FBVyxBQUNYLGdCQUFpQixDQUNsQixBQUNELG9CQUNFLGdCQUFnQixBQUNoQixXQUFXLEFBQ1gsZ0JBQWlCLENBQ2xCLEFDZEQsYVhBQSxFV0VJLGlDQUFrQyxBQUNsQyxxQkFBc0IsQUFDdEIsMEJBQTJCLEFBQzNCLDBCQUE0QixDQUM3QixBQUNELFlBRUUseUJBQTBCLENBQzNCLEFBQ0QsY0FDRSwyQkFBNEIsQ0FDN0IsQUFDRCxrQkFDRSw0QkFBNkIsQ0FDOUIsQUFDRCw0REFHRSxVQUFXLENBQ1osQUFDRCxlQUVFLHNCQUFzQixBQUN0Qix1QkFBd0IsQ0FDekIsQUFDRCxNQUNFLDBCQUEyQixDQUM1QixBQUNELE9BRUUsdUJBQXdCLENWeUs1QixBVXhLRyxJQUVDLHdCQUEwQixDQUMzQixBQUNELE1BQ0UsV0FBYSxDQUFBLEFBRWYsUUFHRSxVQUFVLEFBQ1YsUUFBUyxDQUNWLEFBQ0QsTUFFRSxzQkFBdUIsQ0FDeEIsQ0FBQSIsImZpbGUiOiJzdHlsZS5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Nb250c2VycmF0OjQwMCw3MDAnKTtcblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XG59XG5cbnAge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG4iLCIlY2xlYXIge1xuICBjb250ZW50OiAnICc7XG4gIGRpc3BsYXk6IHRhYmxlO1xufVxuLmNsZWFyIHtcbiAgKnpvb206IDE7XG4gICY6YmVmb3JlIHtcbiAgICBAZXh0ZW5kICVjbGVhcjtcbiAgfVxuICAmOmFmdGVyIHtcbiAgICBAZXh0ZW5kICVjbGVhcjtcbiAgICBjbGVhcjogYm90aDtcbiAgfVxufVxuIiwiQGltcG9ydCB1cmwoXCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9TW9udHNlcnJhdDo0MDAsNzAwXCIpO1xuLmNsZWFyOmJlZm9yZSwgLmNsZWFyOmFmdGVyIHtcbiAgY29udGVudDogJyAnO1xuICBkaXNwbGF5OiB0YWJsZTsgfVxuXG4uY2xlYXIge1xuICAqem9vbTogMTsgfVxuICAuY2xlYXI6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoOyB9XG5cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogNjIuNSU7XG4gIGJhY2tncm91bmQ6IHJhZGlhbC1ncmFkaWVudChlbGxpcHNlIGF0IGNlbnRlciwgI0Y3RjZGMCAwLCAjYzJiYThjIDgwJSwgI2IwYTY2YiAxMDAlKTsgfVxuXG5ib2R5IHtcbiAgZm9udDogMzAwIDEzcHgvMS42ICdIZWx2ZXRpY2EgTmV1ZScsIEhlbHZldGljYSwgQXJpYWw7XG4gIGNvbG9yOiAjNDQ0O1xuICB0cmFuc2l0aW9uOiBhbGwgLjRzIC4zcyBlYXNlLWluOyB9XG5cbmJvZHksIGh0bWwge1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG50ZW1wbGF0ZSxcbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0cztcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDsgfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4OyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLmxvZ28ge1xuICBtYXJnaW46IC01OHB4IDAgMCAtMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTsgfVxuXG4udG9nZ2xlLWJ1dHRvbiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgd2lkdGg6IDQ0cHg7XG4gIGhlaWdodDogNDBweDtcbiAgdG9wOiAzNXB4O1xuICByaWdodDogMzVweDtcbiAgdHJhbnNpdGlvbjogMC4yNXM7XG4gIHotaW5kZXg6IDk5OTsgfVxuICAudG9nZ2xlLWJ1dHRvbjpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC50b2dnbGUtYnV0dG9uIC5tZW51LWJhciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICB3aWR0aDogODAlO1xuICAgIHRyYW5zaXRpb246IDAuNXM7IH1cbiAgLnRvZ2dsZS1idXR0b24gLm1lbnUtYmFyLXRvcCB7XG4gICAgYm9yZGVyOiA0cHggc29saWQgI0Y5REM1QztcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgIHRvcDogMDsgfVxuICAudG9nZ2xlLWJ1dHRvbiAubWVudS1iYXItbWlkZGxlIHtcbiAgICBoZWlnaHQ6IDRweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjlEQzVDO1xuICAgIG1hcmdpbi10b3A6IDdweDtcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7XG4gICAgdG9wOiA0cHg7IH1cbiAgLnRvZ2dsZS1idXR0b24gLm1lbnUtYmFyLWJvdHRvbSB7XG4gICAgYm9yZGVyOiA0cHggc29saWQgI0Y5REM1QztcbiAgICBib3JkZXItdG9wOiBub25lO1xuICAgIHRvcDogMjJweDsgfVxuXG4uYnV0dG9uLW9wZW4tdHJhbnNpdGlvbiwgLmJ1dHRvbi1vcGVuIC5tZW51LWJhci10b3AsIC5idXR0b24tb3BlbiAubWVudS1iYXItYm90dG9tIHtcbiAgYm9yZGVyLWNvbG9yOiAjRjlEQzVDO1xuICB0cmFuc2l0aW9uOiAwLjVzOyB9XG5cbi5idXR0b24tb3BlbiAubWVudS1iYXItdG9wIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHRyYW5zbGF0ZSg4cHgsIDhweCk7IH1cblxuLmJ1dHRvbi1vcGVuIC5tZW51LWJhci1taWRkbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjlEQzVDO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgyNTBweCk7XG4gIHRyYW5zaXRpb246IDAuMXMgZWFzZS1pbjtcbiAgb3BhY2l0eTogMDsgfVxuXG4uYnV0dG9uLW9wZW4gLm1lbnUtYmFyLWJvdHRvbSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgdHJhbnNsYXRlKDdweCwgLTdweCk7IH1cblxuLm1lbnUtd3JhcCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NjUzNjI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogLTM1MHB4O1xuICBoZWlnaHQ6IDEwMHZoO1xuICB3aWR0aDogMzUwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHotaW5kZXg6IDk5ODtcbiAgdHJhbnNpdGlvbjogMC4yNXM7IH1cbiAgLm1lbnUtd3JhcCAuc29jaWFsIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAxNXB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAubWVudS13cmFwIHNwYW4ge1xuICAgIGNvbG9yOiAjMDExOTM2O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiA1cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5tZW51LXNob3cge1xuICByaWdodDogMDsgfVxuXG4ubWVudSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBwYWRkaW5nLXRvcDogNjBweDsgfVxuICAubWVudSBsaSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7IH1cbiAgICAubWVudSBsaSBhIHtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgY29sb3I6ICNGOURDNUM7XG4gICAgICAtby10cmFuc2l0aW9uOiAuM3M7XG4gICAgICAtbXMtdHJhbnNpdGlvbjogLjNzO1xuICAgICAgLW1vei10cmFuc2l0aW9uOiAuM3M7XG4gICAgICAtd2Via2l0LXRyYW5zaXRpb246IC4zcztcbiAgICAgIHRyYW5zaXRpb246IC4zczsgfVxuICAgICAgLm1lbnUgbGkgYTpob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IC41OyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDVlbSkge1xuICAubWVudSwgLm1lbnUtd3JhcCwgLnRvZ2dsZS1idXR0b24sIC5idG4tYmtnIHtcbiAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuI2ludHJvLFxuI2Fib3V0LFxuI2xhdGVzdCxcbiNjb250YWN0IHtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfVxuXG4jaW50cm8ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvYmcxLmpwZ1wiKTsgfVxuICAjaW50cm8gcCB7XG4gICAgY29sb3I6IHJnYmEoNzAsIDgzLCA5OCwgMC41KTtcbiAgICBtYXJnaW4tdG9wOiAwOyB9XG5cbiNhYm91dCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9iZzIuanBnXCIpO1xuICBwYWRkaW5nOiA2JSAwIDAgMDsgfVxuICAjYWJvdXQgcCB7XG4gICAgY29sb3I6ICNGOURDNUM7IH1cblxuI2xhdGVzdCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9iZzMuanBnXCIpO1xuICBwYWRkaW5nOiA2JSAwIDAgMDsgfVxuICAjbGF0ZXN0IHAge1xuICAgIGNvbG9yOiAjNDY1MzYyOyB9XG4gICAgI2xhdGVzdCBwIGEge1xuICAgICAgY29sb3I6ICM0NjUzNjI7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgLW8tdHJhbnNpdGlvbjogLjNzO1xuICAgICAgLW1zLXRyYW5zaXRpb246IC4zcztcbiAgICAgIC1tb3otdHJhbnNpdGlvbjogLjNzO1xuICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOiAuM3M7XG4gICAgICB0cmFuc2l0aW9uOiAuM3M7IH1cbiAgICAgICNsYXRlc3QgcCBhOmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogLjU7IH1cbiAgI2xhdGVzdCAuYnRuLWJrZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIHdpZHRoOiA0NXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NjUzNjI7XG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMzlweDtcbiAgICB0b3A6IDI4cHg7IH1cblxuI2NvbnRhY3Qge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvYmc0LmpwZ1wiKTtcbiAgcGFkZGluZzogNiUgMCAwIDA7XG4gIGNvbG9yOiAjRjlEQzVDOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzMuNzVlbSkge1xuICAuaW1nLXJlc3BvbnNpdmUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiA4MCU7IH0gfVxuXG4uY29udGFpbmVyIHtcbiAgd2lkdGg6IDUwJTtcbiAgcGFkZGluZy1sZWZ0OiA0MHB4OyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzMuNzVlbSkge1xuICAgIC5jb250YWluZXIge1xuICAgICAgd2lkdGg6IDgwJTsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjBlbSkge1xuICAgIC5jb250YWluZXIge1xuICAgICAgd2lkdGg6IDc1JTtcbiAgICAgIG1heC13aWR0aDogNjByZW07IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDMzLjc1ZW0pIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgIHdpZHRoOiA4MCU7IH0gfVxuXG4ucm93IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTsgfVxuXG4ucm93IFtjbGFzc149XCJjb2xcIl0ge1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luOiAwLjVyZW0gMiU7XG4gIG1pbi1oZWlnaHQ6IDAuMTI1cmVtOyB9XG5cbi5yb3c6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogdGFibGU7XG4gIGNsZWFyOiBib3RoOyB9XG5cbi5jb2wtMSxcbi5jb2wtMixcbi5jb2wtMyxcbi5jb2wtNCxcbi5jb2wtNSxcbi5jb2wtNixcbi5jb2wtNyxcbi5jb2wtOCxcbi5jb2wtOSxcbi5jb2wtMTAsXG4uY29sLTExLFxuLmNvbC0xMiB7XG4gIHdpZHRoOiA5NiU7IH1cblxuLmNvbC0xLXNtIHtcbiAgd2lkdGg6IDQuMzMzMzMlOyB9XG5cbi5jb2wtMi1zbSB7XG4gIHdpZHRoOiAxMi42NjY2NyU7IH1cblxuLmNvbC0zLXNtIHtcbiAgd2lkdGg6IDIxJTsgfVxuXG4uY29sLTQtc20ge1xuICB3aWR0aDogMjkuMzMzMzMlOyB9XG5cbi5jb2wtNS1zbSB7XG4gIHdpZHRoOiAzNy42NjY2NyU7IH1cblxuLmNvbC02LXNtIHtcbiAgd2lkdGg6IDQ2JTsgfVxuXG4uY29sLTctc20ge1xuICB3aWR0aDogNTQuMzMzMzMlOyB9XG5cbi5jb2wtOC1zbSB7XG4gIHdpZHRoOiA2Mi42NjY2NyU7IH1cblxuLmNvbC05LXNtIHtcbiAgd2lkdGg6IDcxJTsgfVxuXG4uY29sLTEwLXNtIHtcbiAgd2lkdGg6IDc5LjMzMzMzJTsgfVxuXG4uY29sLTExLXNtIHtcbiAgd2lkdGg6IDg3LjY2NjY3JTsgfVxuXG4uY29sLTEyLXNtIHtcbiAgd2lkdGg6IDk2JTsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgLmNvbC0xIHtcbiAgICB3aWR0aDogNC4zMzMzMyU7IH1cbiAgLmNvbC0yIHtcbiAgICB3aWR0aDogMTIuNjY2NjclOyB9XG4gIC5jb2wtMyB7XG4gICAgd2lkdGg6IDIxJTsgfVxuICAuY29sLTQge1xuICAgIHdpZHRoOiAyOS4zMzMzMyU7IH1cbiAgLmNvbC01IHtcbiAgICB3aWR0aDogMzcuNjY2NjclOyB9XG4gIC5jb2wtNiB7XG4gICAgd2lkdGg6IDQ2JTsgfVxuICAuY29sLTcge1xuICAgIHdpZHRoOiA1NC4zMzMzMyU7IH1cbiAgLmNvbC04IHtcbiAgICB3aWR0aDogNjIuNjY2NjclOyB9XG4gIC5jb2wtOSB7XG4gICAgd2lkdGg6IDcxJTsgfVxuICAuY29sLTEwIHtcbiAgICB3aWR0aDogNzkuMzMzMzMlOyB9XG4gIC5jb2wtMTEge1xuICAgIHdpZHRoOiA4Ny42NjY2NyU7IH1cbiAgLmNvbC0xMiB7XG4gICAgd2lkdGg6IDk2JTsgfVxuICAuaGlkZGVuLXNtIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfSB9XG5cbmZvcm0gaW5wdXQsIGZvcm0gdGV4dGFyZWEge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXI6IDJweCBzb2xpZCAjRjlEQzVDO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGNvbG9yOiAjRjlEQzVDO1xuICBmb250LXNpemU6IDE2cHg7XG4gIHBhZGRpbmc6IDEwcHggMTVweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiA4MCU7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7IH1cbiAgZm9ybSBpbnB1dDo6cGxhY2Vob2xkZXIsIGZvcm0gdGV4dGFyZWE6OnBsYWNlaG9sZGVyIHtcbiAgICBvcGFjaXR5OiAxOyB9XG5cbmZvcm0gaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGNvbG9yOiAjNDY1MzYyO1xuICBiYWNrZ3JvdW5kOiAjRjlEQzVDO1xuICAtby10cmFuc2l0aW9uOiAuM3M7XG4gIC1tcy10cmFuc2l0aW9uOiAuM3M7XG4gIC1tb3otdHJhbnNpdGlvbjogLjNzO1xuICAtd2Via2l0LXRyYW5zaXRpb246IC4zcztcbiAgdHJhbnNpdGlvbjogLjNzO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgZm9ybSBpbnB1dFt0eXBlPVwic3VibWl0XCJdOmhvdmVyIHtcbiAgICBvcGFjaXR5OiAuNTsgfVxuXG4ubGVhZC1pbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMzVweDtcbiAgbGVmdDogNDBweDsgfVxuXG4uaGVhZGxpbmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMzVweDtcbiAgbGVmdDogNDBweDsgfVxuXG4uc29jaWFsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgZm9udC1zaXplOiAyMnB4OyB9XG4gIC5zb2NpYWwgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4OyB9XG4gICAgLnNvY2lhbCBsaTpsYXN0LWNoaWxkIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgICAuc29jaWFsIGxpIGEge1xuICAgICAgY29sb3I6ICNGOURDNUM7XG4gICAgICAtby10cmFuc2l0aW9uOiAuM3M7XG4gICAgICAtbXMtdHJhbnNpdGlvbjogLjNzO1xuICAgICAgLW1vei10cmFuc2l0aW9uOiAuM3M7XG4gICAgICAtd2Via2l0LXRyYW5zaXRpb246IC4zcztcbiAgICAgIHRyYW5zaXRpb246IC4zczsgfVxuICAgICAgLnNvY2lhbCBsaSBhOmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogLjU7IH1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7IH1cblxucCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDsgfVxuXG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG46Oi1tb3otc2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbjo6LXdlYmtpdC1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuQG1lZGlhIHByaW50IHtcbiAgKiB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xuICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICB0ZXh0LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50OyB9XG4gIGEsXG4gIGE6dmlzaXRlZCB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cbiAgYVtocmVmXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIoaHJlZikgXCIpXCI7IH1cbiAgYWJiclt0aXRsZV06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKHRpdGxlKSBcIilcIjsgfVxuICAuaXIgYTphZnRlcixcbiAgYVtocmVmXj1cImphdmFzY3JpcHQ6XCJdOmFmdGVyLFxuICBhW2hyZWZePVwiI1wiXTphZnRlciB7XG4gICAgY29udGVudDogXCJcIjsgfVxuICBwcmUsXG4gIGJsb2NrcXVvdGUge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM5OTk7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkOyB9XG4gIHRoZWFkIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7IH1cbiAgdHIsXG4gIGltZyB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkOyB9XG4gIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7IH1cbiAgQHBhZ2Uge1xuICAgIG1hcmdpbjogMC41Y207IH1cbiAgcCxcbiAgaDIsXG4gIGgzIHtcbiAgICBvcnBoYW5zOiAzO1xuICAgIHdpZG93czogMzsgfVxuICBoMixcbiAgaDMge1xuICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkOyB9IH1cbiIsIioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5odG1sIHtcbiAgZm9udC1zaXplOiA2Mi41JTtcbiAgYmFja2dyb3VuZDogcmFkaWFsLWdyYWRpZW50KGVsbGlwc2UgYXQgY2VudGVyLCAkYmFzZSAwLCAkZGFya2VuIDgwJSwgJGJhY2sgMTAwJSk7XG59XG5ib2R5IHtcbiAgZm9udDogMzAwIDEzcHgvMS42ICdIZWx2ZXRpY2EgTmV1ZScsIEhlbHZldGljYSwgQXJpYWw7XG4gIGNvbG9yOiAjNDQ0O1xuICB0cmFuc2l0aW9uOiBhbGwgLjRzIC4zcyBlYXNlLWluO1xufVxuYm9keSxodG1se1xuXHRtaW4taGVpZ2h0OiAxMDB2aDtcblx0b3ZlcmZsb3c6IGhpZGRlbjtcbn0iLCIvKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscywgLyogMSAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sIC8qIDIgKi9cbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7IC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxudGVtcGxhdGUsIC8qIDEgKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBvcGFjaXR5OiAwLjU0O1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cbiIsIi5oZWFkZXIge1xuXG59XG4ubG9nbyB7XG4gIG1hcmdpbjogLTU4cHggMCAwIC0xMDBweDtcbiAgQGluY2x1ZGUgcG9zaXRpb24oYWJzb2x1dGUsIDUwJSAwIDAgNTAlKTtcbiAgaW1nIHtcblxuICB9XG59XG4iLCJAbWl4aW4gcG9zaXRpb24gKCRwb3NpdGlvbjogcmVsYXRpdmUsICRjb29yZGluYXRlczogMCAwIDAgMCkge1xuICAgIEBpZiB0eXBlLW9mKCRwb3NpdGlvbikgPT0gbGlzdCB7XG4gICAgICAgICRjb29yZGluYXRlczogJHBvc2l0aW9uO1xuICAgICAgICAkcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cblxuICAgICR0b3A6IG50aCgkY29vcmRpbmF0ZXMsIDEpO1xuICAgICRyaWdodDogbnRoKCRjb29yZGluYXRlcywgMik7XG4gICAgJGJvdHRvbTogbnRoKCRjb29yZGluYXRlcywgMyk7XG4gICAgJGxlZnQ6IG50aCgkY29vcmRpbmF0ZXMsIDQpO1xuXG4gICAgcG9zaXRpb246ICRwb3NpdGlvbjtcblxuICAgIEBpZiAkdG9wID09IGF1dG8ge1xuICAgICAgICB0b3A6ICR0b3A7XG4gICAgfVxuICAgIEBlbHNlIGlmIG5vdCh1bml0bGVzcygkdG9wKSkge1xuICAgICAgICB0b3A6ICR0b3A7XG4gICAgfVxuICAgIEBpZiAkcmlnaHQgPT0gYXV0byB7XG4gICAgICAgIHJpZ2h0OiAkcmlnaHQ7XG4gICAgfVxuICAgIEBlbHNlIGlmIG5vdCh1bml0bGVzcygkcmlnaHQpKSB7XG4gICAgICAgIHJpZ2h0OiAkcmlnaHQ7XG4gICAgfVxuICAgIEBpZiAkYm90dG9tID09IGF1dG8ge1xuICAgICAgICBib3R0b206ICRib3R0b207XG4gICAgfVxuICAgIEBlbHNlIGlmIG5vdCh1bml0bGVzcygkYm90dG9tKSkge1xuICAgICAgICBib3R0b206ICRib3R0b207XG4gICAgfVxuICAgIEBpZiAkbGVmdCA9PSBhdXRvIHtcbiAgICAgICAgbGVmdDogJGxlZnQ7XG4gICAgfVxuICAgIEBlbHNlIGlmIG5vdCh1bml0bGVzcygkbGVmdCkpIHtcbiAgICAgICAgbGVmdDogJGxlZnQ7XG4gICAgfVxufVxuIiwiJG1lbnViYXItY29sb3I6ICNGOURDNUM7XG4kbWVudXdyYXAtY29sb3I6ICM0NjUzNjI7XG4kdHJhbnNpdGlvbi10aW1lOiAwLjVzO1xuJHRyYW5zaXRpb24tdGltZS1zaG9ydDogMC4yNXM7XG4kYm9yZGVyOiA0cHggc29saWQgJG1lbnViYXItY29sb3I7XG5cbi50b2dnbGUtYnV0dG9uIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB3aWR0aDogNDRweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICB0b3A6IDM1cHg7XG4gIHJpZ2h0OiAzNXB4O1xuICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbi10aW1lLXNob3J0O1xuICB6LWluZGV4OiA5OTk7XG4gICY6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuXG4gIC5tZW51LWJhciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICB3aWR0aDogODAlO1xuICAgIHRyYW5zaXRpb246ICR0cmFuc2l0aW9uLXRpbWU7XG4gIH1cblxuICAubWVudS1iYXItdG9wIHtcbiAgICBib3JkZXI6ICRib3JkZXI7XG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICB0b3A6IDA7XG4gIH1cblxuICAubWVudS1iYXItbWlkZGxlIHtcbiAgICBoZWlnaHQ6IDRweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWVudWJhci1jb2xvcjtcbiAgICBtYXJnaW4tdG9wOiA3cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogN3B4O1xuICAgIHRvcDogNHB4O1xuICB9XG5cbiAgLm1lbnUtYmFyLWJvdHRvbSB7XG4gICAgYm9yZGVyOiAkYm9yZGVyO1xuICAgIGJvcmRlci10b3A6IG5vbmU7XG4gICAgdG9wOiAyMnB4O1xuICB9XG59XG5cbi5idXR0b24tb3Blbi10cmFuc2l0aW9uIHtcbiAgYm9yZGVyLWNvbG9yOiAkbWVudWJhci1jb2xvcjtcbiAgdHJhbnNpdGlvbjogJHRyYW5zaXRpb24tdGltZTtcbn1cblxuLmJ1dHRvbi1vcGVuIHtcbiAgLm1lbnUtYmFyLXRvcCB7XG4gICAgQGV4dGVuZCAuYnV0dG9uLW9wZW4tdHJhbnNpdGlvbjtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKDhweCwgOHB4KTtcbiAgfVxuXG4gIC5tZW51LWJhci1taWRkbGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRtZW51YmFyLWNvbG9yO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDI1MHB4KTtcbiAgICB0cmFuc2l0aW9uOiAwLjFzIGVhc2UtaW47XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuXG4gIC5tZW51LWJhci1ib3R0b20ge1xuICAgIEBleHRlbmQgLmJ1dHRvbi1vcGVuLXRyYW5zaXRpb247XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGUoN3B4LCAtN3B4KTtcbiAgfVxufVxuXG4ubWVudS13cmFwIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJG1lbnV3cmFwLWNvbG9yO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IC0zNTBweDtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgd2lkdGg6IDM1MHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB6LWluZGV4OiA5OTg7XG4gIHRyYW5zaXRpb246ICR0cmFuc2l0aW9uLXRpbWUtc2hvcnQ7XG5cbiAgLnNvY2lhbCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMTVweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICBzcGFuIHtcbiAgICBjb2xvcjogIzAxMTkzNjtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogNXB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuXG4ubWVudS1zaG93IHtcbiAgcmlnaHQ6IDA7XG59XG5cbi5tZW51IHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIHBhZGRpbmctdG9wOjYwcHg7XG5cbiAgbGkge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuXG4gICAgYSB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBmb250LXNpemU6IDIycHg7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgIGNvbG9yOiAjRjlEQzVDO1xuICAgICAgLW8tdHJhbnNpdGlvbjouM3M7XG4gICAgICAtbXMtdHJhbnNpdGlvbjouM3M7XG4gICAgICAtbW96LXRyYW5zaXRpb246LjNzO1xuICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOi4zcztcbiAgICAgIHRyYW5zaXRpb246LjNzO1xuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogLjU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDVlbSkge1xuICAubWVudSwgLm1lbnUtd3JhcCwgLnRvZ2dsZS1idXR0b24sIC5idG4tYmtnIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4iLCIjaW50cm8sXG4jYWJvdXQsXG4jbGF0ZXN0LFxuI2NvbnRhY3R7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbiNpbnRybyB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL2JnMS5qcGcnKTtcblxuICBwIHtcbiAgICBjb2xvcjogcmdiYSg3MCw4Myw5OCwuNSk7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxufVxuXG4jYWJvdXQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9iZzIuanBnJyk7XG4gIHBhZGRpbmc6IDYlIDAgMCAwO1xuXG4gIHAge1xuICAgIGNvbG9yOiAjRjlEQzVDO1xuICB9XG59XG5cbiNsYXRlc3Qge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9iZzMuanBnJyk7XG4gIHBhZGRpbmc6IDYlIDAgMCAwO1xuXG4gIHAge1xuICAgIGNvbG9yOiAjNDY1MzYyO1xuXG4gICAgYSB7XG4gICAgICBjb2xvcjogIzQ2NTM2MjtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICAtby10cmFuc2l0aW9uOi4zcztcbiAgICAgIC1tcy10cmFuc2l0aW9uOi4zcztcbiAgICAgIC1tb3otdHJhbnNpdGlvbjouM3M7XG4gICAgICAtd2Via2l0LXRyYW5zaXRpb246LjNzO1xuICAgICAgdHJhbnNpdGlvbjouM3M7XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBvcGFjaXR5OiAuNTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuYnRuLWJrZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIHdpZHRoOiA0NXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NjUzNjI7XG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMzlweDtcbiAgICB0b3A6IDI4cHg7XG4gIH1cbn1cblxuI2NvbnRhY3Qge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9iZzQuanBnJyk7XG4gIHBhZGRpbmc6IDYlIDAgMCAwO1xuICBjb2xvcjogI0Y5REM1Qztcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzMy43NWVtKSB7XG4gIC5pbWctcmVzcG9uc2l2ZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDgwJTtcbiAgfVxufVxuIiwiJHdpZHRoOiA5NiU7XG4kZ3V0dGVyOiA0JTtcbiRicmVha3BvaW50LXNtYWxsOiAzMy43NWVtOyAvLyA1NDBweFxuJGJyZWFrcG9pbnQtbWVkOiA0NWVtOyAvLyA3MjBweFxuJGJyZWFrcG9pbnQtbGFyZ2U6IDYwZW07IC8vIDk2MHB4XG5cbi5jb250YWluZXIge1xuICB3aWR0aDogNTAlO1xuICBwYWRkaW5nLWxlZnQ6IDQwcHg7XG5cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnJlYWtwb2ludC1zbWFsbCkge1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cblxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicmVha3BvaW50LWxhcmdlKSB7XG4gICAgd2lkdGg6IDc1JTtcbiAgICBtYXgtd2lkdGg6IDYwcmVtO1xuICB9XG5cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkYnJlYWtwb2ludC1zbWFsbCkge1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cbn1cblxuLnJvdyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5yb3cgW2NsYXNzXj1cImNvbFwiXSB7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW46IDAuNXJlbSAyJTtcbiAgbWluLWhlaWdodDogMC4xMjVyZW07XG59XG5cbi5yb3c6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogdGFibGU7XG4gIGNsZWFyOiBib3RoO1xufVxuXG4uY29sLTEsXG4uY29sLTIsXG4uY29sLTMsXG4uY29sLTQsXG4uY29sLTUsXG4uY29sLTYsXG4uY29sLTcsXG4uY29sLTgsXG4uY29sLTksXG4uY29sLTEwLFxuLmNvbC0xMSxcbi5jb2wtMTIge1xuICB3aWR0aDogJHdpZHRoO1xufVxuXG4uY29sLTEtc20geyB3aWR0aDooJHdpZHRoIC8gMTIpIC0gKCRndXR0ZXIgKiAxMSAvIDEyKTsgfVxuLmNvbC0yLXNtIHsgd2lkdGg6ICgkd2lkdGggLyA2KSAtICgkZ3V0dGVyICogMTAgLyAxMik7IH1cbi5jb2wtMy1zbSB7IHdpZHRoOiAoJHdpZHRoIC8gNCkgLSAoJGd1dHRlciAqIDkgLyAxMik7IH1cbi5jb2wtNC1zbSB7IHdpZHRoOiAoJHdpZHRoIC8gMykgLSAoJGd1dHRlciAqIDggLyAxMik7IH1cbi5jb2wtNS1zbSB7IHdpZHRoOiAoJHdpZHRoIC8gKDEyIC8gNSkpIC0gKCRndXR0ZXIgKiA3IC8gMTIpOyB9XG4uY29sLTYtc20geyB3aWR0aDogKCR3aWR0aCAvIDIpIC0gKCRndXR0ZXIgKiA2IC8gMTIpOyB9XG4uY29sLTctc20geyB3aWR0aDogKCR3aWR0aCAvICgxMiAvIDcpKSAtICgkZ3V0dGVyICogNSAvIDEyKTsgfVxuLmNvbC04LXNtIHsgd2lkdGg6ICgkd2lkdGggLyAoMTIgLyA4KSkgLSAoJGd1dHRlciAqIDQgLyAxMik7IH1cbi5jb2wtOS1zbSB7IHdpZHRoOiAoJHdpZHRoIC8gKDEyIC8gOSkpIC0gKCRndXR0ZXIgKiAzIC8gMTIpOyB9XG4uY29sLTEwLXNtIHsgd2lkdGg6ICgkd2lkdGggLyAoMTIgLyAxMCkpIC0gKCRndXR0ZXIgKiAyIC8gMTIpOyB9XG4uY29sLTExLXNtIHsgd2lkdGg6ICgkd2lkdGggLyAoMTIgLyAxMSkpIC0gKCRndXR0ZXIgKiAxIC8gMTIpOyB9XG4uY29sLTEyLXNtIHsgd2lkdGg6ICR3aWR0aDsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicmVha3BvaW50LW1lZCkge1xuICAuY29sLTEgeyB3aWR0aDooJHdpZHRoIC8gMTIpIC0gKCRndXR0ZXIgKiAxMSAvIDEyKTsgfVxuICAuY29sLTIgeyB3aWR0aDogKCR3aWR0aCAvIDYpIC0gKCRndXR0ZXIgKiAxMCAvIDEyKTsgfVxuICAuY29sLTMgeyB3aWR0aDogKCR3aWR0aCAvIDQpIC0gKCRndXR0ZXIgKiA5IC8gMTIpOyB9XG4gIC5jb2wtNCB7IHdpZHRoOiAoJHdpZHRoIC8gMykgLSAoJGd1dHRlciAqIDggLyAxMik7IH1cbiAgLmNvbC01IHsgd2lkdGg6ICgkd2lkdGggLyAoMTIgLyA1KSkgLSAoJGd1dHRlciAqIDcgLyAxMik7IH1cbiAgLmNvbC02IHsgd2lkdGg6ICgkd2lkdGggLyAyKSAtICgkZ3V0dGVyICogNiAvIDEyKTsgfVxuICAuY29sLTcgeyB3aWR0aDogKCR3aWR0aCAvICgxMiAvIDcpKSAtICgkZ3V0dGVyICogNSAvIDEyKTsgfVxuICAuY29sLTggeyB3aWR0aDogKCR3aWR0aCAvICgxMiAvIDgpKSAtICgkZ3V0dGVyICogNCAvIDEyKTsgfVxuICAuY29sLTkgeyB3aWR0aDogKCR3aWR0aCAvICgxMiAvIDkpKSAtICgkZ3V0dGVyICogMyAvIDEyKTsgfVxuICAuY29sLTEwIHsgd2lkdGg6ICgkd2lkdGggLyAoMTIgLyAxMCkpIC0gKCRndXR0ZXIgKiAyIC8gMTIpOyB9XG4gIC5jb2wtMTEgeyB3aWR0aDogKCR3aWR0aCAvICgxMiAvIDExKSkgLSAoJGd1dHRlciAqIDEgLyAxMik7IH1cbiAgLmNvbC0xMiB7IHdpZHRoOiAkd2lkdGg7IH1cblxuICAuaGlkZGVuLXNtIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuIiwiZm9ybSB7XG4gIGlucHV0LCB0ZXh0YXJlYSB7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjRjlEQzVDO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjb2xvcjogI0Y5REM1QztcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgcGFkZGluZzogMTBweCAxNXB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiA4MCU7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcblxuICAgICY6OnBsYWNlaG9sZGVyIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuICB9XG5cbiAgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBjb2xvcjogIzQ2NTM2MjtcbiAgICBiYWNrZ3JvdW5kOiAjRjlEQzVDO1xuICAgIC1vLXRyYW5zaXRpb246LjNzO1xuICAgIC1tcy10cmFuc2l0aW9uOi4zcztcbiAgICAtbW96LXRyYW5zaXRpb246LjNzO1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjouM3M7XG4gICAgdHJhbnNpdGlvbjouM3M7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIG9wYWNpdHk6IC41O1xuICAgIH1cbiAgfVxufVxuIiwiLmxlYWQtaW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDM1cHg7XG4gIGxlZnQ6IDQwcHg7XG59XG5cbi5oZWFkbGluZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAzNXB4O1xuICBsZWZ0OiA0MHB4O1xufVxuIiwiLnNvY2lhbCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIGZvbnQtc2l6ZTogMjJweDtcblxuICBsaSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgcGFkZGluZy1yaWdodDogMDtcbiAgICB9XG5cbiAgICBhIHtcbiAgICAgIGNvbG9yOiAjRjlEQzVDO1xuICAgICAgLW8tdHJhbnNpdGlvbjouM3M7XG4gICAgICAtbXMtdHJhbnNpdGlvbjouM3M7XG4gICAgICAtbW96LXRyYW5zaXRpb246LjNzO1xuICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOi4zcztcbiAgICAgIHRyYW5zaXRpb246LjNzO1xuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogLjU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCI6OnNlbGVjdGlvbntcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lO1xufVxuOjotbW96LXNlbGVjdGlvbntcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lO1xufVxuOjotd2Via2l0LXNlbGVjdGlvbntcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lO1xufVxuIiwiQG1lZGlhIHByaW50IHtcbiAgKiB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xuICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICB0ZXh0LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4gIGEsXG4gIGE6dmlzaXRlZCB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIH1cbiAgYVtocmVmXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIoaHJlZikgXCIpXCI7XG4gIH1cbiAgYWJiclt0aXRsZV06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKHRpdGxlKSBcIilcIjtcbiAgfVxuICAuaXIgYTphZnRlcixcbiAgIGFbaHJlZl49XCJqYXZhc2NyaXB0OlwiXTphZnRlcixcbiAgIGFbaHJlZl49XCIjXCJdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICB9XG4gIHByZSxcbiAgYmxvY2txdW90ZSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzk5OTtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG4gIH1cbiAgdGhlYWQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDtcbiAgfVxuICB0cixcbiAgaW1nIHtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG4gIH1cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuICBAcGFnZSB7XG4gICAgbWFyZ2luOiAwLjVjbTtcbiAgfVxuICBwLFxuICBoMixcbiAgaDMge1xuICAgIG9ycGhhbnM6IDM7XG4gICAgd2lkb3dzOiAzO1xuICB9XG4gIGgyLFxuICBoMyB7XG4gICAgcGFnZS1icmVhay1hZnRlcjogYXZvaWQ7XG4gIH1cbn1cbiJdfQ== */
